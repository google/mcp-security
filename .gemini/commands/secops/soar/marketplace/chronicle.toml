description = "Google Chronicle SOAR marketplace integration slash commands for SIEM security operations"
prompt = """You are taking commands and params and calling the available MCP Tools."""

[[subCommands]]
name = "help"
description = "Show help for Chronicle SOAR marketplace integration commands"
prompt = """
{% if help %}
Chronicle SOAR Marketplace Integration Commands

Available Commands:
- rule-details: Fetch detailed information about Chronicle detection rules
- detection-details: Get specific detection analysis and details
- udm-query: Execute custom UDM queries with flexible time filtering
- list-iocs: List enterprise IoCs discovered in specified time range
- enrich-ip: Enrich IP addresses using Chronicle threat intelligence
- ping: Test Chronicle integration connectivity

Use /chronicle <command> --help for detailed command usage.

Security Context:
- All commands require active SOAR case context
- Chronicle integration provides SIEM data analysis capabilities
- Essential for threat hunting, incident response, and IOC validation
{% else %}
Display help information for Chronicle SOAR marketplace integration commands.
{% endif %}
"""

[[subCommands]]
name = "rule-details"
description = "Fetch detailed information about a Chronicle SIEM detection rule"
prompt = """
{% if help %}
Usage: /chronicle rule-details <rule_id>

Fetch detailed information about a Chronicle SIEM detection rule by its ID.

Arguments:
  rule_id      (required) The unique identifier of the Chronicle detection rule

Example:
  /chronicle rule-details ru_12345678-1234-1234-1234-123456789012

Security Context:
- Requires active SOAR case with case_id and alert_group_identifiers
- Used for understanding detection logic and rule effectiveness analysis
- Essential for alert triage and false positive reduction
{% else %}
Call the google_chronicle_get_rule_details tool with: `google_chronicle_get_rule_details(case_id={{case-id}}, alert_group_identifiers={{alert-group-identifiers}}, rule_id={{rule-id}})`
{% endif %}
"""
  [[subCommands.args]]
  name = "case-id"
  required = true
  description = "The unique identifier (ID) of the case"

  [[subCommands.args]]
  name = "alert-group-identifiers"
  required = true
  description = "Identifiers for the alert groups"

  [[subCommands.args]]
  name = "rule-id"
  required = true
  description = "The unique identifier of the Chronicle detection rule"

[[subCommands]]
name = "detection-details"
description = "Fetch detailed information about a specific Chronicle detection"
prompt = """
{% if help %}
Usage: /chronicle detection-details <rule_id> <detection_id>

Fetch detailed information about a specific detection generated by a Chronicle rule.

Arguments:
  rule_id        (required) The unique identifier of the Chronicle detection rule
  detection_id   (required) The unique identifier of the specific detection

Example:
  /chronicle detection-details ru_12345678-1234-1234-1234-123456789012 de_87654321-4321-4321-4321-210987654321

Security Context:
- Requires active SOAR case with case_id and alert_group_identifiers
- Used for detailed analysis of specific security events
- Critical for incident response and threat hunting activities
{% else %}
Call the google_chronicle_get_detection_details tool with: `google_chronicle_get_detection_details(case_id={{case-id}}, alert_group_identifiers={{alert-group-identifiers}}, rule_id={{rule-id}}, detection_id={{detection-id}})`
{% endif %}
"""
  [[subCommands.args]]
  name = "case-id"
  required = true
  description = "The unique identifier (ID) of the case"

  [[subCommands.args]]
  name = "alert-group-identifiers"
  required = true
  description = "Identifiers for the alert groups"

  [[subCommands.args]]
  name = "rule-id"
  required = true
  description = "The unique identifier of the Chronicle detection rule"

  [[subCommands.args]]
  name = "detection-id"
  required = true
  description = "The unique identifier of the specific detection"

[[subCommands]]
name = "udm-query"
description = "Execute custom UDM query in Chronicle SIEM with flexible time filtering"
prompt = """
{% if help %}
Usage: /chronicle udm-query <query> [time_frame] [start_time] [end_time] [max_results]

Execute a custom UDM (Unified Data Model) query against Chronicle SIEM data.

Arguments:
  query          (required) The UDM query to execute in Chronicle
  time_frame     (optional) Predefined time frame options
  start_time     (optional) Custom start time in ISO 8601 format
  end_time       (optional) Custom end time in ISO 8601 format
  max_results    (optional) Maximum number of results to return (default: 50, max: 10000)

Time Frame Options:
- "Alert Time Till Now"
- "30 Minutes Around Alert Time"
- "1 Hour Around Alert Time"
- "5 Minutes Around Alert Time"
- "Custom" (requires start_time)

Examples:
  /chronicle udm-query "metadata.event_type = 'NETWORK_CONNECTION' AND target.port = 443" "Last 24 Hours"
  /chronicle udm-query "principal.hostname = 'suspicious-host'" "Custom" "2024-01-01T00:00:00Z" "2024-01-02T00:00:00Z" 100

Security Context:
- Limited to 120 executions per hour for performance
- Maximum 90-day time window supported
- Use for threat hunting, IOC validation, and incident investigation
{% else %}
Call the google_chronicle_execute_udm_query tool with: `google_chronicle_execute_udm_query(case_id={{case-id}}, alert_group_identifiers={{alert-group-identifiers}}, query={{query}}{% if time-frame %}, time_frame={{time-frame}}{% endif %}{% if start-time %}, start_time={{start-time}}{% endif %}{% if end-time %}, end_time={{end-time}}{% endif %}{% if max-results %}, max_results_to_return={{max-results}}{% endif %})`
{% endif %}
"""
  [[subCommands.args]]
  name = "case-id"
  required = true
  description = "The unique identifier (ID) of the case"

  [[subCommands.args]]
  name = "alert-group-identifiers"
  required = true
  description = "Identifiers for the alert groups"

  [[subCommands.args]]
  name = "query"
  required = true
  description = "The UDM query to execute in Chronicle"

  [[subCommands.args]]
  name = "time-frame"
  required = false
  description = "Predefined time frame for the query"

  [[subCommands.args]]
  name = "start-time"
  required = false
  description = "Custom start time in ISO 8601 format"

  [[subCommands.args]]
  name = "end-time"
  required = false
  description = "Custom end time in ISO 8601 format"

  [[subCommands.args]]
  name = "max-results"
  required = false
  description = "Maximum number of results to return"

[[subCommands]]
name = "list-iocs"
description = "List all IoCs discovered within your enterprise in specified time range"
prompt = """
{% if help %}
Usage: /chronicle list-iocs [start_time] [max_iocs]

List all Indicators of Compromise (IoCs) discovered within your enterprise.

Arguments:
  start_time     (optional) Start time in RFC 3339 format (default: 3 days ago)
  max_iocs       (optional) Maximum number of IoCs to return (1-10000, default: 50)

Example:
  /chronicle list-iocs "2024-01-01T00:00:00Z" 100
  /chronicle list-iocs

Security Context:
- Returns active IoCs from threat intelligence feeds
- Use for threat hunting and IOC validation
- Essential for proactive threat detection
{% else %}
Call the google_chronicle_list_io_cs tool with: `google_chronicle_list_io_cs(case_id={{case-id}}, alert_group_identifiers={{alert-group-identifiers}}{% if start-time %}, start_time={{start-time}}{% endif %}{% if max-iocs %}, max_io_cs_to_fetch={{max-iocs}}{% endif %})`
{% endif %}
"""
  [[subCommands.args]]
  name = "case-id"
  required = true
  description = "The unique identifier (ID) of the case"

  [[subCommands.args]]
  name = "alert-group-identifiers"
  required = true
  description = "Identifiers for the alert groups"

  [[subCommands.args]]
  name = "start-time"
  required = false
  description = "Start time in RFC 3339 format"

  [[subCommands.args]]
  name = "max-iocs"
  required = false
  description = "Maximum number of IoCs to return"

[[subCommands]]
name = "enrich-ip"
description = "Enrich IP address entities using Chronicle IoC information"
prompt = """
{% if help %}
Usage: /chronicle enrich-ip <severity_threshold> <mark_suspicious_n_a> [create_insight] [only_suspicious_insight]

Enrich IP address entities using Chronicle's IoC database information.

Arguments:
  severity_threshold        (required) Lowest severity to mark as suspicious
  mark_suspicious_n_a      (required) Mark as suspicious if severity unavailable (true/false)
  create_insight           (optional) Create insight with enrichment info (true/false)
  only_suspicious_insight  (optional) Only create insights for suspicious entities (true/false)

Severity Options:
- "Info", "Low", "Medium", "High", "Critical"

Example:
  /chronicle enrich-ip "Medium" true true false
  /chronicle enrich-ip "High" false

Security Context:
- Supports IP Address entities only
- Enriches with threat intelligence data
- Critical for IP reputation analysis and threat assessment
{% else %}
Call the google_chronicle_enrich_ip tool with: `google_chronicle_enrich_ip(case_id={{case-id}}, alert_group_identifiers={{alert-group-identifiers}}, lowest_suspicious_severity={{severity-threshold}}, mark_suspicious_n_a_severity={{mark-suspicious-n-a}}{% if create-insight %}, create_insight={{create-insight}}{% endif %}{% if only-suspicious-insight %}, only_suspicious_insight={{only-suspicious-insight}}{% endif %})`
{% endif %}
"""
  [[subCommands.args]]
  name = "case-id"
  required = true
  description = "The unique identifier (ID) of the case"

  [[subCommands.args]]
  name = "alert-group-identifiers"
  required = true
  description = "Identifiers for the alert groups"

  [[subCommands.args]]
  name = "severity-threshold"
  required = true
  description = "Lowest severity level to mark as suspicious"

  [[subCommands.args]]
  name = "mark-suspicious-n-a"
  required = true
  description = "Mark as suspicious if severity information is not available"

  [[subCommands.args]]
  name = "create-insight"
  required = false
  description = "Create insight containing enrichment information"

  [[subCommands.args]]
  name = "only-suspicious-insight"
  required = false
  description = "Only create insights for suspicious entities"

[[subCommands]]
name = "ping"
description = "Test connectivity to Chronicle integration"
prompt = """
{% if help %}
Usage: /chronicle ping

Test connectivity to Chronicle integration with configured parameters.

No additional arguments required.

Example:
  /chronicle ping

Security Context:
- Validates Chronicle integration configuration
- Tests authentication and connectivity
- Essential for troubleshooting integration issues
{% else %}
Call the google_chronicle_ping tool with: `google_chronicle_ping(case_id={{case-id}}, alert_group_identifiers={{alert-group-identifiers}})`
{% endif %}
"""
  [[subCommands.args]]
  name = "case-id"
  required = true
  description = "The unique identifier (ID) of the case"

  [[subCommands.args]]
  name = "alert-group-identifiers"
  required = true
  description = "Identifiers for the alert groups"